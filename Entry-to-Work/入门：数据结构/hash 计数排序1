
// 数组
a<- {'0':0, '1':2, '2':1, '3':56, '4':3, '5':67, '6':3, 'length':7 }


/*
入桶后 hash 实现的效果如下
hash <- {
	'0':1
	'1':1
	'2':1,
	'3':2,
	'56':1
	'67':1
}
*/
// 声明哈希，前面是数字，后面是该数字出现的次数。计算数字出现的次数，这就是计数排序。
hash <- {}



//  入桶，
index1 <- 0
while(index1 < a['length']) // index1 小于7
	number = a[index1]  // 0,2,1,56,3,67,3
	if hash[number] == defined //hash[number]不存在
		hash[number] = 1
	else  // hash[number]存在
		hash[number] = hash[number] + 1
	end
	index1 <- index1 +1
end


//  出桶
index2 <- 0
max <- findMax(a)
newArr <- {}
while(index2 < max+1)
	count =hash[index2]
	if count != undefined
		countIndex = 0
		while(countIndex < count)
			newArr.push(index2)
			count Index <- countIndex + 1
		end
	end
	index2 <- index2 + 1
end
print newArr
